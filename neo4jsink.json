curl -H 'Content-Type: application/json' 192.168.18.75:8083/connectors --data '
{
  "name": "demo5",
  "config": {
        "topics": "postgres.public.customers",
        "connector.class": "streams.kafka.connect.sink.Neo4jSinkConnector",
        "key.converter": "org.apache.kafka.connect.storage.StringConverter",
        "value.converter": "org.apache.kafka.connect.json.JsonConverter",
        "errors.retry.timeout": "-1",
        "errors.retry.delay.max.ms": "1000",
        "errors.tolerance": "all",
        "errors.log.enable": true,
        "errors.log.include.messages": true,
        "neo4j.server.uri": "bolt://192.168.18.75:7687",
        "neo4j.authentication.basic.username": "neo4j",
        "neo4j.authentication.basic.password": "connect",
		"neo4j.database": "demo",
        "neo4j.encryption.enabled": "false",
		"value.converter.schemas.enable":"false",
		"neo4j.topic.cypher.postgres.public.customers": "WITH event CALL { WITH event WITH event WHERE event.op IN [\"c\",\"u\",\"r\"] WITH event[\"after\"] AS cust MERGE (c:Customers {CustomerID:toInteger(cust.customerid)}) ON CREATE SET c.CustomersName = cust.customername, c.contactname = cust.contactname, c.address = cust.address, c.city = cust.city, c.postalcode = cust.postalcode, c.country = cust.country ON MATCH SET c.CustomersName = cust.customername, c.contactname = cust.contactname, c.address = cust.address,c.city = cust.city,c.postalcode = cust.postalcode, c.country = cust.country UNION WITH event WITH event WHERE event.op IN [\"d\"] WITH event[\"before\"] AS cust MATCH (c1:Customers {CustomerID:cust.customerid}) WITH c1 OPTIONAL MATCH (c1)-[:PLACED_ORDER]->(o) DETACH DELETE c1, o }"
  }
}'
